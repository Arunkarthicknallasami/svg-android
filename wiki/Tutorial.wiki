#summary A quick tutorial for using svg-android.

== Downloading ==

Download the jar file [http://code.google.com/p/svg-android/downloads/detail?name=svg-android.jar here] and place it in the `libs` folder of your project.

== A Simple Example ==

Suppose we have a new Android project with a blank Activity, the svg-android.jar file in the `libs` directory, and [http://code.google.com/p/svg-android/downloads/detail?name=android.svg this] SVG file in the `res/raw` folder.

The following code in the `onCreate` method will make the activity render the SVG file:

{{{
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        // Create a new ImageView
        ImageView imageView = new ImageView(this);
        // Set the background color to white
        imageView.setBackgroundColor(Color.WHITE);
        // Parse the SVG file from the resource
        SVG svg = SVGParser.getSVGFromResource(this, R.raw.android);
        // Get a drawable from the parsed SVG and set it as the drawable for the ImageView
        imageView.setImageDrawable(svg.createPictureDrawable());
        // Set the ImageView as the content view for the Activity
        setContentView(imageView);
    }
}}}

== Some Tricks ==

=== Canvas Drawing ===

If you are drawing the SVG directly on to a Canvas, as opposed to populating an ImageView or some other pre-built container, then just use the `android.graphics.Picture` object instead:

{{{
    Canvas canvas;
    ...
    // Parse the SVG file from the resource
    SVG svg = SVGParser.getSVGFromResource(this, R.raw.android);
    // Get the picture
    Picture picture = svg.getPicture();
    // Draw picture in canvas
    // Note: use transforms such as translate, scale and rotate to position the picture correctly
    canvas.drawPicture(picture);
    ...
}}}

=== Color Substitution ===

Upon loading the SVG, you can substitute one color in the SVG for another. For example, to make the green Android blue instead:

{{{
}}}